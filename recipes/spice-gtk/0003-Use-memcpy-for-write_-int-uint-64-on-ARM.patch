From b1e9717471156634fc161b4d5f43c8fb71ce89c0 Mon Sep 17 00:00:00 2001
From: "Sergio L. Pascual" <sergiolpascual@flexvdi.com>
Date: Wed, 21 Oct 2015 17:46:49 +0200
Subject: [PATCH] Use memcpy for write_[int|uint]64 on ARM.

---
 spice-common/common/marshaller.c         | 7 ++++---
 spice-common/python_modules/demarshal.py | 4 ++--
 2 files changed, 6 insertions(+), 5 deletions(-)

diff --git a/spice-common/common/marshaller.c b/spice-common/common/marshaller.c
index 9da7453..19746c3 100644
--- a/spice-common/common/marshaller.c
+++ b/spice-common/common/marshaller.c
@@ -52,9 +52,10 @@
 #if defined(__arm__) || defined(_M_ARM)
 // In ARM, there may be problems with unaligned accesses in 64 bit values
 #warning Compiling for little-endian ARM architecture
-#define write_int64(ptr,v) do { *((uint32_t *)(ptr)) = *((uint32_t *)(&v)); \
-    *((uint32_t *)(ptr)+1) = *((uint32_t *)(&v)+1); } while(0)
-#define write_uint64(ptr,v) write_int64(ptr,v)
+#define write_int64(ptr,v) do { int64_t tmp = v; \
+    memcpy((char *)ptr, &tmp, sizeof(int64_t)); } while (0)
+#define write_uint64(ptr,v) do { uint64_t tmp = v; \
+    memcpy((char *)ptr, &tmp, sizeof(uint64_t)); } while (0)
 #else
 #define write_int64(ptr,v) (*((int64_t *)(ptr)) = v)
 #define write_uint64(ptr,v) (*((uint64_t *)(ptr)) = v)
diff --git a/spice-common/python_modules/demarshal.py b/spice-common/python_modules/demarshal.py
index 8fb6227..8ca7417 100644
--- a/spice-common/python_modules/demarshal.py
+++ b/spice-common/python_modules/demarshal.py
@@ -86,8 +86,8 @@ def write_parser_helpers(writer):
         writer.statement("return val")
         writer.end_block()
         writer.macro("write_%sint64" % sign, "ptr, val", "\\")
-        writer.writeln("    do { *((uint32_t *)(ptr)) = *((uint32_t *)(&val)); \\")
-        writer.writeln("         *((uint32_t *)(ptr) + 1) = *((uint32_t *)(&val) + 1); } while(0)")
+        writer.writeln("    do { %s tmp = v; \\" % ctype)
+        writer.writeln("         memcpy((char *)ptr, &tmp, sizeof(%s)); } while (0)" % ctype)
     writer.writeln("#else")
     for sign in ["", "u"]:
         type = "%sint64" % sign
-- 
2.3.8 (Apple Git-58)

